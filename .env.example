# ===== NeuraStack Backend - Dynamic Configuration Environment Variables =====
# Copy this file to .env and configure the values for your environment

# ===== BASIC CONFIGURATION =====
NODE_ENV=development
TIER=free

# Legacy tier variable for backward compatibility
NEURASTACK_TIER=free

# ===== API KEYS =====
OPENAI_API_KEY=your_openai_api_key_here
GEMINI_API_KEY=your_gemini_api_key_here
CLAUDE_API_KEY=your_claude_api_key_here
XAI_API_KEY=your_xai_api_key_here

# ===== ENSEMBLE RUNNER CONFIGURATION =====
# Maximum concurrent requests for different tiers
ENSEMBLE_MAX_CONCURRENT_FREE=30
ENSEMBLE_MAX_CONCURRENT_PREMIUM=60

# Request timeout in milliseconds
ENSEMBLE_TIMEOUT_MS=45000

# Retry configuration
ENSEMBLE_RETRY_ATTEMPTS=3
ENSEMBLE_RETRY_DELAY_MS=800

# Maximum prompt length in characters
ENSEMBLE_MAX_PROMPT_LENGTH=6000

# ===== PERFORMANCE OPTIMIZER CONFIGURATION =====
# Enable/disable performance features (true/false)
PERF_ENABLE_PARALLEL_SYNTHESIS=true
PERF_ENABLE_SIMILARITY_MATCHING=true
PERF_ENABLE_VOTING_CACHE=true
PERF_ENABLE_PRE_WARMING=true

# Performance thresholds and timeouts
PERF_SIMILARITY_THRESHOLD=0.85
PERF_MAX_PARALLEL_OPERATIONS=3
PERF_SYNTHESIS_TIMEOUT=15000
PERF_VOTING_TIMEOUT=2000
PERF_PRE_WARM_INTERVAL=300000

# ===== CACHE CONFIGURATION =====
# Cache size and thresholds
CACHE_MAX_SIZE=10000
CACHE_SIMILARITY_THRESHOLD=0.8
CACHE_QUALITY_THRESHOLD=0.7
CACHE_COMPRESSION_THRESHOLD=1024
CACHE_USER_PATTERN_WINDOW=100
CACHE_PREDICTIVE_SIZE=500

# Cache TTL values in seconds
CACHE_TTL_HIGH_QUALITY=7200
CACHE_TTL_MEDIUM_QUALITY=3600
CACHE_TTL_LOW_QUALITY=1800

# ===== VOTING CONFIGURATION =====
# Enable/disable voting features (true/false)
VOTING_ENABLE_DIVERSITY_WEIGHTING=true
VOTING_ENABLE_HISTORICAL_ACCURACY=true
VOTING_ENABLE_META_VOTING=true
VOTING_ENABLE_TIE_BREAKING=true
VOTING_ENABLE_ABSTENTION=true

# Voting weight factors (should sum to 1.0)
VOTING_WEIGHT_TRADITIONAL=0.3
VOTING_WEIGHT_DIVERSITY=0.2
VOTING_WEIGHT_HISTORICAL=0.25
VOTING_WEIGHT_SEMANTIC=0.15
VOTING_WEIGHT_RELIABILITY=0.1

# ===== VALIDATION THRESHOLDS =====
# Readability thresholds
VALIDATION_READABILITY_MIN=0.6
VALIDATION_READABILITY_OPTIMAL=0.8

# Factual consistency thresholds
VALIDATION_FACTUAL_MIN=0.7
VALIDATION_FACTUAL_OPTIMAL=0.85

# Novelty thresholds
VALIDATION_NOVELTY_MIN=0.5
VALIDATION_NOVELTY_OPTIMAL=0.75

# Toxicity thresholds
VALIDATION_TOXICITY_MAX=0.3
VALIDATION_TOXICITY_OPTIMAL=0.1

# Overall quality thresholds
VALIDATION_OVERALL_MIN=0.65
VALIDATION_OVERALL_OPTIMAL=0.8

# Quality weight factors for overall calculation
VALIDATION_WEIGHT_READABILITY=0.2
VALIDATION_WEIGHT_FACTUAL=0.3
VALIDATION_WEIGHT_NOVELTY=0.25
VALIDATION_WEIGHT_TOXICITY=0.15
VALIDATION_WEIGHT_STRUCTURE=0.1

# ===== VENDOR CLIENT CONFIGURATION =====
# Timeout for all vendor API calls in milliseconds
VENDOR_TIMEOUT_MS=30000

# ===== PARALLEL PROCESSING CONFIGURATION =====
# Concurrency limits
PARALLEL_MAX_CONCURRENT_MODELS=3
PARALLEL_MAX_CONCURRENT_SYNTHESIS=2

# Timeouts in milliseconds
PARALLEL_MODEL_TIMEOUT=15000
PARALLEL_SYNTHESIS_TIMEOUT=10000
PARALLEL_VOTING_TIMEOUT=3000

# Retry and connection settings
PARALLEL_RETRY_ATTEMPTS=2
PARALLEL_CONNECTION_POOL_SIZE=5

# ===== META VOTER CONFIGURATION =====
# Meta voter model and settings
META_VOTER_MODEL=gpt-3.5-turbo
META_VOTER_MAX_TOKENS=800
META_VOTER_TEMPERATURE=0.3
META_VOTER_TIMEOUT=15000

# Meta voting trigger thresholds
META_VOTER_MAX_WEIGHT_DIFF=0.05
META_VOTER_MIN_CONSENSUS=0.4

# ===== VOTING HISTORY CONFIGURATION =====
# History management settings
VOTING_HISTORY_MAX_SIZE=1000
VOTING_HISTORY_ADAPTATION_WINDOW=100
VOTING_HISTORY_DECAY_FACTOR=0.95

# Consensus strength thresholds
VOTING_CONSENSUS_VERY_WEAK=0.3
VOTING_CONSENSUS_WEAK=0.45
VOTING_CONSENSUS_MODERATE=0.6
VOTING_CONSENSUS_STRONG=0.75
VOTING_CONSENSUS_VERY_STRONG=0.9

# ===== ABSTENTION SERVICE CONFIGURATION =====
# Abstention trigger thresholds
ABSTENTION_LOW_CONFIDENCE=0.3
ABSTENTION_HIGH_FAILURE_RATE=0.5
ABSTENTION_LOW_QUALITY_SCORE=0.4
ABSTENTION_HIGH_DIVERSITY=0.8
ABSTENTION_LOW_CONSENSUS=0.4

# Re-query limits and settings
ABSTENTION_MAX_ATTEMPTS=2
ABSTENTION_COOLDOWN_PERIOD=5000
ABSTENTION_TIMEOUT_INCREASE=1.5
ABSTENTION_TEMPERATURE_ADJUSTMENT=0.1

# ===== MODEL CONFIGURATION SERVICE =====
# Cache TTL for model configurations in milliseconds
MODEL_CONFIG_CACHE_TTL=300000

# ===== SYNTHESIS SERVICE CONFIGURATION =====
# Synthesis service settings
SYNTHESIS_TIMEOUT=30000
SYNTHESIS_MODEL=gpt-4o-mini
SYNTHESIS_MAX_TOKENS=500

# ===== TIER-SPECIFIC CONFIGURATIONS =====
# FREE TIER SETTINGS
TIER_FREE_SHARED_WORD_LIMIT=1000
TIER_FREE_MAX_TOKENS_PER_ROLE=1200
TIER_FREE_MAX_SYNTHESIS_TOKENS=1600
TIER_FREE_MAX_CHARACTERS_PER_ROLE=4800
TIER_FREE_TIMEOUT_MS=75000
TIER_FREE_REQUESTS_PER_HOUR=25
TIER_FREE_REQUESTS_PER_DAY=150
TIER_FREE_MAX_PROMPT_LENGTH=1500
TIER_FREE_CACHE_TTL=600
TIER_FREE_CONCURRENCY_LIMIT=25

# PREMIUM TIER SETTINGS
TIER_PREMIUM_SHARED_WORD_LIMIT=800
TIER_PREMIUM_MAX_TOKENS_PER_ROLE=1600
TIER_PREMIUM_MAX_SYNTHESIS_TOKENS=2000
TIER_PREMIUM_MAX_CHARACTERS_PER_ROLE=3800
TIER_PREMIUM_TIMEOUT_MS=75000
TIER_PREMIUM_REQUESTS_PER_HOUR=150
TIER_PREMIUM_REQUESTS_PER_DAY=1500
TIER_PREMIUM_MAX_PROMPT_LENGTH=4000
TIER_PREMIUM_CACHE_TTL=300
TIER_PREMIUM_CONCURRENCY_LIMIT=50

# ===== FIREBASE CONFIGURATION =====
# Firebase project settings (use your project values)
FIREBASE_PROJECT_ID=neurastack-backend
FIREBASE_STORAGE_BUCKET=neurastack-backend.firebasestorage.app

# Firebase service account credentials (for production)
# Get these from Firebase Console > Project Settings > Service Accounts
FIREBASE_CLIENT_EMAIL=your_service_account_email@neurastack-backend.iam.gserviceaccount.com
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour_Private_Key_Here\n-----END PRIVATE KEY-----"

# ===== SERVER CONFIGURATION =====
# Port for the server to run on
PORT=8080

# ===== RUNTIME CONFIGURATION =====
# Set to true to enable detailed configuration logging
DEBUG_CONFIG=false

# ===== DYNAMIC CONFIGURATION FEATURES =====
# This configuration system supports:
# - Runtime configuration reloading via SIGUSR1 signal
# - Environment variable validation with schema checking
# - Tier-specific configuration overrides
# - Comprehensive logging and error handling
# - Backward compatibility with existing configurations

# ===== RUNTIME CONFIGURATION RELOADING =====
# To reload configuration without restarting the service:
# kill -USR1 <process_id>
#
# To log current configuration:
# kill -USR2 <process_id>

# ===== TIER COMPARISON =====
# FREE TIER (TIER=free) - COST OPTIMIZED:
# - Models: GPT-4o-mini, Gemini 1.5 Flash, Claude 3.5 Haiku Latest
# - Synthesizer: GPT-4o-mini for cost efficiency
# - Max concurrent requests: 30
# - Timeout: 45 seconds
# - Cache TTL: 10 minutes
# - Rate limits: 25 requests/hour, 150 requests/day

# PREMIUM TIER (TIER=premium) - PERFORMANCE OPTIMIZED:
# - Models: GPT-4o, Gemini 1.5 Flash, Claude 3.5 Haiku Latest
# - Synthesizer: GPT-4o-mini for balanced performance
# - Max concurrent requests: 60
# - Timeout: 45 seconds
# - Cache TTL: 5 minutes
# - Rate limits: 150 requests/hour, 1500 requests/day

# ===== CONFIGURATION VALIDATION =====
# All configuration values are validated using convict schema
# Invalid values will cause the application to exit with error messages
# Check logs for detailed validation errors

# ===== USAGE EXAMPLES =====
# For development/testing:
# TIER=free
# NODE_ENV=development

# For production:
# TIER=premium
# NODE_ENV=production

# ===== ENDPOINTS =====
# Main ensemble endpoint: POST /default-ensemble
# Health check: GET /health-detailed
# Metrics: GET /metrics
